// https://www.nowcoder.com/share/jump/451570361696345207590
// 流程：用 temp 保存 cur.next ，把 cur.next 指向 pre ，cur 成为新的 pre ，temp 成为新的 cur
// 1. 从头节点开始，注意头节点也要指定新的 next (为 null)
// 2. 最终返回 pre 而不是 cur


import java.util.*;

/*
 * public class ListNode {
 *   int val;
 *   ListNode next = null;
 *   public ListNode(int val) {
 *     this.val = val;
 *   }
 * }
 */

public class Solution {
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * 
     * @param head ListNode类 
     * @return ListNode类
     */
    public ListNode ReverseList (ListNode head) {
        // write code here
        if(head==null){
            return head;
        }

        ListNode pre=null;
        ListNode cur=head;
        ListNode temp=null;
        while(cur!=null){
            temp=cur.next;
            cur.next=pre;
            pre=cur;
            cur=temp;
        }
        return pre;
    }
}